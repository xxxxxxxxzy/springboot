package ${package.Controller};


import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.example.back.entity.User;
import org.springframework.web.bind.annotation.*;
import javax.annotation.Resource;
import java.util.List;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;

import $!{package.Service}.$!{table.serviceName};
import ${package.Entity}.${entity};

#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end
@Resource
private ${table.serviceName} ${table.entityPath}Service;

//新增和修改
@PostMapping
public Boolean save(@RequestBody ${entity} ${table.entityPath}){   //前台传入JSON数据，可以映射成user对象
    return ${table.entityPath}Service.saveOrUpdate(${table.entityPath}); //新增或者更新
}
//刪除
@DeleteMapping("/{id}")
public Boolean delete(@PathVariable Integer id) {
    return ${table.entityPath}Service.removeById(id);
}
//查詢所有
@GetMapping
public List<${entity}> findAll() {
    return ${table.entityPath}Service.list();
}
//根据id查询
@GetMapping("/{id}")
public ${entity} findOne(@PathVariable Integer id) {
    return ${table.entityPath}Service.getById(id);
}
//分页查询
@GetMapping("/page")
public Page<${entity}> findPage(@RequestParam Integer pageNum,
                                @RequestParam Integer pageSize) {
    QueryWrapper<User> queryWrapper = new QueryWrapper<>();
    queryWrapper.orderByDesc("id");
    return ${table.entityPath}Service.page(new Page<>(pageNum, pageSize),queryWrapper);
}

//批量删除
@PostMapping("/del/batch")
public Boolean deleteBatch(@RequestBody List<Integer> ids){
    return ${table.entityPath}Service.removeBatchByIds(ids);

}

}


#end